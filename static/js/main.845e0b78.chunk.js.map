{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","title","ingredients","image","className","style","recipes","src","alt","map","ingredient","text","console","log","process","App","useState","setRecipes","search","setSearch","query","setQuery","url","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","recipe","Key","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAmBeA,EAjBA,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,YAAYC,EAAU,EAAVA,MACnC,OACA,sBAAKC,UAAWC,IAAMC,QAAtB,UACG,6BAAKL,IAEL,qBAAKM,IAAKJ,EAAOK,IAAI,KACjB,6BACQN,EAAYO,KAAI,SAAAC,GAAU,OACxB,6BAAKA,EAAWC,gB,MCPjCC,QAAQC,IAAIC,8NAGZ,IAkDmBC,EAlDN,WAAO,IAAD,EAEUC,mBAAS,IAFnB,mBAEVV,EAFU,KAEFW,EAFE,OAGSD,mBAAS,IAHlB,mBAGTE,EAHS,KAGFC,EAHE,OAIQH,mBAAS,SAJjB,mBAIRI,EAJQ,KAIFC,EAJE,KAKTC,EAAI,mCAAD,OAAqCF,EAArC,mBAAqDN,WAArD,oBAA6FA,oCAE1GS,qBAAU,WACPC,MAEG,CAACJ,IAEL,IAAMI,EAAU,uCAAC,8BAAAC,EAAA,sEACMC,MAAMJ,GADZ,cACXK,EADW,gBAEIA,EAASC,OAFb,OAETC,EAFS,OAGfZ,EAAWY,EAAKC,MAHD,2CAAD,qDAgBf,OACC,sBAAK1B,UAAU,MAAf,UACA,uBAAM2B,SAPW,SAAAC,GAChBA,EAAEC,iBACFZ,EAASH,IAKgBd,UAAU,cAApC,UACA,uBAAOA,UAAU,aAAa8B,KAAK,OAAOC,MAAOjB,EAAQkB,SAZvC,SAAAJ,GACjBb,EAAUa,EAAEK,OAAOF,UAYpB,wBAAQ/B,UAAU,gBAAgB8B,KAAK,SAAvC,wBAEA,qBAAK9B,UAAU,UAAf,SACCE,EAAQG,KAAI,SAAA6B,GAAM,OACjB,cAAC,EAAD,CACAC,IAAKD,EAAOA,OAAOE,MAClBvC,MAAOqC,EAAOA,OAAOE,MACrBtC,YAAaoC,EAAOA,OAAOpC,YAC1BC,MAAOmC,EAAOA,OAAOnC,iBClCdsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.845e0b78.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"./recipes.modules.css\";\r\nconst Recipe = ({title,ingredients,image}) =>{\r\nreturn(\r\n<div className={style.recipes}>\r\n   <h1>{title}\r\n   </h1>\r\n   <img src={image} alt=\"\" />\r\n       <ol>\r\n              {ingredients.map(ingredient=>(\r\n                 <li>{ingredient.text}\r\n                      </li>))}\r\n        </ol>\r\n         \r\n</div>\r\n\r\n);\r\n\r\n};\r\nexport default Recipe;"," import React,{useEffect,useState} from \"react\";\nimport Recipe from \"./Recipe\";\nimport \"./App.css\";\nconsole.log(process.env);\n\n\nconst  App = () => {\n  \n  const [recipes,setRecipes]=useState([]);\n   const [search,setSearch]=useState(\"\");\n    const [query,setQuery]=useState(\"cakes\");\n    const url= `https://api.edamam.com/search?q=${query}&app_id=${process.env.REACT_APP_APP_ID}&app_key=${process.env.REACT_APP_APP_KEY}`;\n\nuseEffect(()=>{\n   getRecipes();\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n  } , [query]);\n   \n  const getRecipes=async () =>{\n  const response = await fetch(url);\n    const data = await response.json();\n    setRecipes(data.hits);\n    \n     };\n\n   const updateSearch=e=>{\n     setSearch(e.target.value);\n\n   } ;\n   const getSearch = e =>{\n     e.preventDefault();\n     setQuery(search);\n   } ;\n\n   return (\n    <div className=\"App\">\n    <form onSubmit={getSearch}className=\"search-form\">\n    <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\n    <button className=\"search-button\" type=\"submit\"> Search</button>\n    </form>\n    <div className=\"recipes\">\n    {recipes.map(recipe => (\n      <Recipe \n      Key={recipe.recipe.label}\n       title={recipe.recipe.label}\n       ingredients={recipe.recipe.ingredients}\n        image={recipe.recipe.image}\n         />\n            \n        \n    ))}\n    </div>\n     </div>\n );\n\n    } ;\n    export default App ;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}